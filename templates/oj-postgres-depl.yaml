apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres-depl
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      volumes:
        - name: {{ .Release.Name }}-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
      containers:
        - name: postgres
          image: postgres:10-alpine
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: {{ .Release.Name }}-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          resources:
            limits:
              memory: "150Mi"
              cpu: "30m"
            requests:
              memory: "80Mi"
              cpu: "10m"
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRES_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres-srv
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: {{ .Release.Name }}-postgres
  ports:
  - port: 5432
    targetPort: 5432
